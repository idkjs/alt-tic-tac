// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var State$ReactHooksTemplate = require("./State.bs.js");

function initialContextValue_001(param) {
  return /* () */0;
}

var initialContextValue = /* tuple */[
  State$ReactHooksTemplate.initialState,
  initialContextValue_001
];

var stateContext = React.createContext(initialContextValue);

var make = stateContext.Provider;

function makeProps(value, children, param) {
  return {
          value: value,
          children: children
        };
}

var Provider = {
  stateContext: stateContext,
  make: make,
  makeProps: makeProps
};

function use(param) {
  return React.useContext(stateContext);
}

function StateProvider(Props) {
  var children = Props.children;
  return React.createElement(make, makeProps(React.useReducer(State$ReactHooksTemplate.reducer, State$ReactHooksTemplate.initialState), children, /* () */0));
}

var make$1 = StateProvider;

exports.initialContextValue = initialContextValue;
exports.Provider = Provider;
exports.use = use;
exports.make = make$1;
/* stateContext Not a pure module */
