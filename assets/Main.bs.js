// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Round$ReactHooksTemplate = require("./state/Round.bs.js");
var State$ReactHooksTemplate = require("./state/State.bs.js");
var StateProvider$ReactHooksTemplate = require("./state/StateProvider.bs.js");

function Main(Props) {
  var match = StateProvider$ReactHooksTemplate.use(undefined);
  var dispatch = match[1];
  var state = match[0];
  var startNewRound = function (_event) {
    Round$ReactHooksTemplate.startNewRound(dispatch);
    
  };
  var joinRound = function (_event) {
    Round$ReactHooksTemplate.joinRound(dispatch, state.input);
    
  };
  var roundString = function (param) {
    var round = state.round;
    if (round !== undefined) {
      return round.roundId + (":" + (round.playerId + (":" + State$ReactHooksTemplate.playerToString(round.player))));
    } else {
      return "";
    }
  };
  return React.createElement("div", undefined, React.createElement("button", {
                  onClick: startNewRound
                }, "Start new round"), React.createElement("input", {
                  onChange: (function ($$event) {
                      return Curry._1(dispatch, {
                                  TAG: /* ChangeInput */1,
                                  _0: $$event.target.value
                                });
                    })
                }), React.createElement("button", {
                  onClick: joinRound
                }, "Join round"), React.createElement("div", undefined, roundString(undefined)));
}

var make = Main;

exports.make = make;
/* react Not a pure module */
